
html, body {
    overflow-x: hidden;
    height: 100%;
}
body {
    background: #fff;
    padding: 0;
    margin: 0;
}

.header {
    display: block;
    margin: 0 auto;
    max-width: 100%;
    background-color: transparent;
    position: fixed;
    height: 60px!important;
    z-index: 10;
    transition: background-color 250ms ease-in-out;
}
.main {
    margin: 0 auto;
    display: block;
    height: 100%;
    margin-top: 60px;
}
.mainInner{
    display: table;
    height: 100%;
    width: 100%;
    text-align: center;
}
.mainInner div{
    display:table-cell;
    vertical-align: middle;
    font-size: 3em;
    font-weight: bold;
    letter-spacing: 1.25px;
}
#sidebarMenu {
    height: 100%;
    position: fixed;
    left: 0;
    width: 250px;
    margin-top: 60px;
    transform: translateX(-250px);
    transition: transform 250ms ease-in-out;
    background: white;
    z-index: 999;
}
.sidebarMenuInner{
    margin:0;
    padding:0;
    border-top: 1px solid rgba(255, 255, 255, 0.10);
}
.sidebarMenuInner li{
    list-style: none;
    color: black;
    text-transform: uppercase;
    font-weight: bold;
    padding: 20px;
    cursor: pointer;
    border-bottom: 1px solid rgba(255, 255, 255, 0.10);
}
.sidebarMenuInner li span{
    display: block;
    font-size: 14px;
    color: rgba(255, 255, 255, 0.50);
}
.sidebarMenuInner li a{
    color: #fff;
    text-transform: uppercase;
    font-weight: bold;
    cursor: pointer;
    text-decoration: none;
}
input[type="checkbox"]:checked ~ #sidebarMenu {
    transform: translateX(0);
    box-shadow: 0 0 0 9999px #000000b0;
}

input[type=checkbox] {
    transition: all 0.3s;
    box-sizing: border-box;
    display: none;
}
.sidebarIconToggle {
    transition: all 0.3s;
    box-sizing: border-box;
    cursor: pointer;
    position: absolute;
    z-index: 99;
    height: 100%;
    width: 100%;
    top: 22px;
    left: 15px;
    height: 22px;
    width: 22px;
}
.spinner {
    transition: all 0.3s;
    box-sizing: border-box;
    position: absolute;
    height: 3px;
    width: 100%;
    background-color: black;
}
.horizontal {
    transition: all 0.3s;
    box-sizing: border-box;
    position: relative;
    float: left;
    margin-top: 3px;
}
.diagonal.part-1 {
    position: relative;
    transition: all 0.3s;
    box-sizing: border-box;
    float: left;
}
.diagonal.part-2 {
    transition: all 0.3s;
    box-sizing: border-box;
    position: relative;
    float: left;
    margin-top: 3px;
}
input[type=checkbox]:checked ~ .sidebarIconToggle > .horizontal {
    transition: all 0.3s;
    box-sizing: border-box;
    opacity: 0;
}
input[type=checkbox]:checked ~ .sidebarIconToggle > .diagonal.part-1 {
    transition: all 0.3s;
    box-sizing: border-box;
    transform: rotate(135deg);
    margin-top: 8px;
}
input[type=checkbox]:checked ~ .sidebarIconToggle > .diagonal.part-2 {
    transition: all 0.3s;
    box-sizing: border-box;
    transform: rotate(-135deg);
    margin-top: -9px;
}
 li > i{
    vertical-align:middle;
 }
 i{
    display:inline-block;
    margin-right:10px
 }

 strong{
    display:inline-block
 }

// login signup logout button
 .d-flex span {
    margin-top:5px;
  }
  
  .d-flex span .login, .d-flexspan .signup {
    color:#d9d9d9;
    margin-right:1.5rem;
    text-decoration:none;
  }
  .d-flex span .login:hover, .d-flex span .signup:hover{
    color:black;
  }

  .d-flex span .action-button {
    font-weight: 600!important;
    background:#208f8f;
    border-radius:20px;
    font-size:inherit;
    color:#fff;
    // box-shadow:none;
    border:none;
    // text-shadow:none;
    padding:.5rem .8rem;
    transition:background-color 0.25s;
  }
  
  .d-flex span .action-button:hover {
    background:#269d9d;
  }
  
  .d-flex span .form-inline label {
    color:rgb(110, 107, 107);
  }

  .d-flex span .login, .d-flexspan .signup {
    color:#d9d9d9;
    margin-right:1.5rem;
    text-decoration:none;
  }
  .d-flex span .login:hover, .d-flex span .signup:hover{
    color:black;
  }

  // DROPDOWN

  .d-flex{
    width: 55%;
    margin-right: -20%;
  }

  .select-box {
    position: relative;
    display: block;
    width: 100%;
    cursor: pointer;
    margin-left: -15%;
    margin-right: 5%;
    font-family: 'Open Sans', 'Helvetica Neue', 'Segoe UI', 'Calibri', 'Arial', sans-serif;
    font-size: 18px;
    color: #60666d;
    width: 70%;
    margin-left: -5%;
    
    @media (min-width: 768px) {
      width: 70%;
    }
    
    @media (min-width: 992px) {
      width: 50%;
    }
    
    @media (min-width: 1200px) {
      width: 30%;
    }
    
    &__current {
      position: relative;
      cursor: pointer;
      outline: none;
      
      &:focus {
        & + .select-box__list {
          opacity: 1;
          // We have to set "animation-name: none;" to make the list visible (read below how it works)
  
          animation-name: none;
          
          .select-box__option {
            cursor: pointer;
          }
          .select-box__option:hover {
            color: white;
            background-color: gray;
            opacity: 0.8;
          }
        }
        
        .select-box__icon {
          transform: translateY(-50%) rotate(180deg);
        }
      }
    }
    
    &__icon {
      position: absolute;
      top: 50%;
      right: 15px;
      transform: translateY(-50%);
      width: 20px;
      opacity: 0.3;
      transition: 0.2s ease;
    }
    
    &__value {
      display: flex;
    }
    
    &__input {
      display: none;
      
      &:checked + .select-box__input-text {
        display: block;
        cursor: pointer;
      }
    }
    
    &__input-text {
      display: none;
      width: 100%;
      margin: 0;
      padding: 15px;
      background-color: #fff;
    }
    
    &__list {
      position: absolute;
      width: 100%;
      padding: 0;
      list-style: none;
      opacity: 0;
      
      // We need to use animation with delay.
      // Otherwise the click event will not have time to run on label, because this element disapears immediately when .select-box__current element loses the focus.
      // This delay will not be noticed because we set "opacity" to "0".
      // We also use "animation-fill-mode: forwards" to make the list stay hidden.
      
      animation-name: HideList;
      animation-duration: 0.5s;
      animation-delay: 0.5s;
      animation-fill-mode: forwards;
      animation-timing-function: step-start;
      box-shadow: 0 15px 30px -10px transparentize(#000, 0.9);
    }
    
    &__option {
      display: block;
      padding: 15px;
      background-color: #fff;
      
      &:hover,
      &:focus {
        color: #546c84;
        background-color: #fbfbfb;
      }
    }
  }
  
  @keyframes HideList {
    from {
      transform: scaleY(1);
    }
    to {
      transform: scaleY(0);
    }
  }
 